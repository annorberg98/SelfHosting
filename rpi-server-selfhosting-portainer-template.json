{
  "version": "2",
  "templates": [
    {
      "categories": ["Other", "Tools"],
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "image": "pihole/pihole:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole.png",
      "name": "pihole",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53.",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pi-Hole",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ]
    },
    {
      "categories": ["Other", "Tools"],
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole with both DoH (DNS over HTTPS) and DoT (DNS over TLS) clients.",
      "image": "oijkn/pihole-doh-dot:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole_doh-dot.png",
      "name": "pihole DoH/DoT",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53.",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "4443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pi-Hole DoH/DoT",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ]
    },
    {
      "categories": ["Other", "Tools"],
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole. This version has Ubound software installed on it so you don't need to rely on external DNS providers.",
      "image": "cbcrowe/pihole-unbound:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole-unbound.png",
      "name": "pihole-unbound",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53. For extra information on this container visit the mainteiner \u003ca href='https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container'\u003eGitHub Page\u003c/a\u003e. You can add ports: 5335 to access Ubound externally; 22 to enable SSH; 67 to use DHCP Server. Add those ports in Show advanced options.",
      "platform": "linux",
      "ports": ["53:53/tcp", "53:53/udp", "1010:80/tcp", "4443:443/tcp"],
      "restart_policy": "unless-stopped",
      "title": "Pi-Hole-Unbound",
      "type": 1,
      "env": [
        {
          "default": "192.168.0.X",
          "label": "ServerIP",
          "name": "ServerIP",
          "description": "Insert the Raspberry Pi IP here"
        },
        {
          "default": "Europe\\London",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "DNSSEC",
          "name": "DNSSEC",
          "select": [
            {
              "text": "Enable DNSSEC",
              "value": "true",
              "default": true
            },
            {
              "text": "Disable DNSSEC",
              "value": "false"
            }
          ]
        },
        {
          "default": "127.0.0.1#5335",
          "label": "DNS1",
          "name": "DNS1",
          "preset": true
        },
        {
          "default": "127.0.0.1#5335",
          "label": "DNS2",
          "name": "DNS2",
          "preset": true
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole-Unbound",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole-Unbound/DNS",
          "container": "/etc/dnsmasq.d"
        },
        {
      "categories": ["Monitor", "Tools"],
      "description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rpi_monitor.png",
      "name": "RaspberryPi-Docker-Monitor",
      "platform": "linux",
      "ports": ["3000:3000/tcp"],
      "env": [
        {
          "default": "15d",
          "label": "PROMETHEUS_RETENTION",
          "name": "PROMETHEUS_RETENTION"
        }
      ],
      "restart_policy": "unless-stopped",
      "title": "Raspberry Pi Docker Monitor",
      "type": 3,
      "repository": {
        "stackfile": "stack/raspberrypi-monitoring.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      }
    },
    {
      "categories": ["Tools", "Web", "Other"],
      "description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
      "env": [
        {
          "default": "latest-arm",
          "label": "arch",
          "name": "arch"
        },
        {
          "default": "true",
          "label": "OOKLA_EULA_GDPR",
          "name": "OOKLA_EULA_GDPR"
        }
      ],
      "image": "henrywhitaker3/speedtest-tracker:dev-arm",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
      "name": "speedtest-tracker",
      "platform": "linux",
      "ports": ["8765:80/tcp"],
      "restart_policy": "unless-stopped",
      "title": "Speedtest Tracker",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/speedtest-tracker",
          "container": "/config"
        }
      ]
    },
    {
      "categories": ["Other"],
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "env": [
        {
          "default": "eth0",
          "label": "INTERFACE",
          "name": "INTERFACE"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/openvpn-as:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/openvpn-as-icon.png",
      "name": "openvpn-as",
      "platform": "linux",
      "ports": ["943:943/tcp", "9443:9443/tcp", "1194:1194/udp"],
      "restart_policy": "unless-stopped",
      "title": "OpenVPN Access Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
          "container": "/config"
        }
      ]
    },
    {
      "categories": ["Other", "Tools"],
      "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
      "image": "b4bz/homer:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homer.png",
      "name": "homer",
      "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
      "platform": "linux",
      "ports": ["8902:8080/tcp"],
      "restart_policy": "unless-stopped",
      "title": "Homer",
      "type": 1,
      "env": [
        {
          "default": "1000",
          "label": "GID",
          "name": "GID"
        },
        {
          "default": "1000",
          "label": "UID",
          "name": "UID"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Homer/assets",
          "container": "/www/assets"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homer",
          "container": "/www/config.yml"
        }
      ]
    }
      ]
    }
  ]
}
