{
  "version": "2",
  "templates": [
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking.",
      "image": "adguard/adguardhome:latest",
      "logo": "https://developer.asustor.com/uploadIcons/0020_999_1595573028_AdGuardhome_256.png",
      "name": "Adguardhome",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "80:80/tcp",
        "443:443/tcp",
        "443:443/udp",
        "3001:3000/tcp",
        "853:853/tcp",
        "784:784/udp",
        "853:853/udp",
        "8853:8853/udp",
        "5443:5443/tcp",
        "5443:5443/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Adguardhome",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/AdguardHome/config",
          "container": "/opt/adguardhome/conf"
        },
        {
          "bind": "/portainer/Files/AppData/Config/AdguardHome/work",
          "container": "/opt/adguardhome/work"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/AdguardTeam/AdGuardHome/wiki/Docker\" target=\"_blank\">https://github.com/AdguardTeam/AdGuardHome/wiki/Docker</a><br><br><br>"
    },
    {
      "categories": [
        "Other",
        "Games"
      ],
      "description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
      "env": [
        {
          "default": "John",
          "label": "Foundry Account Name",
          "name": "FOUNDRY_USERNAME"
        },
        {
          "default": "password",
          "label": "Foundry Password",
          "name": "FOUNDRY_PASSWORD"
        },
        {
          "default": "changeme",
          "label": "Instance Admin Password",
          "name": "FOUNDRY_ADMIN_KEY"
        },
        {
          "default": "true",
          "label": "CONTAINER_PRESERVE_CONFIG",
          "name": "CONTAINER_PRESERVE_CONFIG"
        }
      ],
      "image": "felddy/foundryvtt:release",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/foundrylogo.png",
      "name": "FoundryVTT",
      "platform": "linux",
      "ports": [
        "30000:30000/tcp"
      ],
      "restart_polocy": "unless-stopped",
      "title": "FoundryVTT Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/foundryvtt",
          "container": "/data"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foundryvtt.com/\" target=\"_blank\">https://foundryvtt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/felddy/foundryvtt\" target=\"_blank\">https://hub.docker.com/r/felddy/foundryvtt</a><br><br><br>"
    },
    {
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "description": "JDownloader docker image",
      "env": [
        {
          "default": "",
          "label": "MYJD_DEVICE_NAME",
          "name": "MYJD_DEVICE_NAME"
        },
        {
          "default": "",
          "label": "MYJD_USER",
          "name": "MYJD_USER"
        },
        {
          "default": "",
          "label": "MYJD_PASSWORD",
          "name": "MYJD_PASSWORD"
        }
      ],
      "image": "jaymoulin/jdownloader:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jdownloader.png",
      "name": "JDownloader",
      "platform": "linux",
      "ports": [
        "3129:3129/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "JDownloader",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/JDownloader",
          "container": "/opt/JDownloader/cfg"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/opt/JDownloader/Downloads"
        }
      ]
    },
    {
      "categories": [
        "Monitor",
        "Tools"
      ],
      "description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rpi_monitor.png",
      "name": "RaspberryPi-Docker-Monitor",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "env": [
        {
          "default": "15d",
          "label": "PROMETHEUS_RETENTION",
          "name": "PROMETHEUS_RETENTION"
        }
      ],
      "restart_policy": "unless-stopped",
      "title": "Raspberry Pi Docker Monitor",
      "type": 3,
      "repository": {
        "stackfile": "stack/raspberrypi-monitoring.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      }
    },
    {
      "categories": [
        "Music"
      ],
      "description": "Self hosted Spotify tracking dashboard.",
      "env": [
        {
          "default": "3081",
          "label": "API Port",
          "name": "__api_port__"
        },
        {
          "default": "3080",
          "label": "Client Port",
          "name": "__client_port__"
        },
        {
          "default": "http://192.168.X.Y:3080",
          "label": "Client Endpoint",
          "name": "__client_endpoint__",
          "description": "If you have changed the default client port don't forget to change it here too."
        },
        {
          "default": "http://192.168.X.Y:3081",
          "label": "API Endpoint",
          "name": "__api_endpoint__",
          "description": "If you have changed the default API port don't forget to change it here too."
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "description": "Create a Spotify App and copy the Client ID: https://developer.spotify.com/dashboard/applications",
          "label": "Spotify Client ID",
          "name": "__your_spotify_client_id__"
        },
        {
          "description": "Copy the Client Secret: https://developer.spotify.com/dashboard/applications",
          "label": "Spotify Client Secret",
          "name": "__your_spotify_secret__"
        }
      ],
      "name": "Your Spotify",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/your-spotify.png",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Yooooomi/your_spotify\" target=\"_blank\">https://github.com/Yooooomi/your_spotify</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Yooooomi/your_spotify#readme\" target=\"_blank\">https://github.com/Yooooomi/your_spotify#readme</a><br><br><br>Create a Spotify App here: https://developer.spotify.com/dashboard/applications. Don't forget adding Redirect URL: http://192.168.X.Y:3081/oauth/spotify/callback under edit settings of the dashboard.",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/your-spotify.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "title": "your-spotify",
      "type": 3
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
      "image": "archivebox/archivebox:master",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
      "name": "archivebox",
      "note": "By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available <a href='https://github.com/ArchiveBox/ArchiveBox/wiki'>here</a>.",
      "platform": "linux",
      "ports": [
        "8002:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Archivebox",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/archivebox",
          "container": "/data"
        }
      ],
      "env": [
        {
          "default": "*",
          "label": "ALLOWED_HOSTS",
          "name": "ALLOWED_HOSTS"
        },
        {
          "default": "750m",
          "label": "MEDIA_MAX_SIZE",
          "name": "MEDIA_MAX_SIZE"
        },
        {
          "default": "true",
          "label": "PUBLIC_INDEX",
          "name": "PUBLIC_INDEX"
        },
        {
          "default": "true",
          "label": "PUBLIC_SNAPSHOTS",
          "name": "PUBLIC_SNAPSHOTS"
        },
        {
          "default": "false",
          "label": "PUBLIC_ADD_VIEW",
          "name": "PUBLIC_ADD_VIEW"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Authentication"
      ],
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "env": [
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "authelia/authelia:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/authelia.png",
      "name": "authelia",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.authelia.com/\" target=\"_blank\">https://www.authelia.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.authelia.com/docs/configuration/\" target=\"_blank\">https://www.authelia.com/docs/configuration/</a><br><br><br>Requires a configuration.yml file in order to work. Documentation is Available <a href='https://www.authelia.com/configuration/prologue/introduction/'>here</a>.",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Authelia",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Authelia",
          "container": "/etc/authelia/"
        }
      ]
    },
    {
      "categories": [
        "Wiki"
      ],
      "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/Stockholm",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "default": "http://192.168.X.Y:6875",
          "description": "Address to access Bookstack. If using a domain, add it here. If not set correctly the app will not be accessible",
          "label": "APP_URL",
          "name": "APP_URL"
        },
        {
          "default": "6875",
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bookstack2.png",
      "name": "bookstack",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.bookstackapp.com/\" target=\"_blank\">https://www.bookstackapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.bookstackapp.com/docs/admin/installation/#docker\" target=\"_blank\">https://www.bookstackapp.com/docs/admin/installation/#docker</a><br><br><br>Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/bookstack.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "title": "Bookstack",
      "type": 3
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "GUID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "label": "SUDO_PASSWORD",
          "name": "SUDO_PASSWORD"
        },
        {
          "default": "example.my.domain",
          "label": "PROXY_DOMAIN",
          "name": "PROXY_DOMAIN"
        }
      ],
      "image": "linuxserver/code-server:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/code-server.png",
      "name": "code-server",
      "platform": "linux",
      "ports": [
        "8443:8443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Code Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Code-Server",
          "container": "/config"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://coder.com/\" target=\"_blank\">https://coder.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-code-server\" target=\"_blank\">https://docs.linuxserver.io/images/docker-code-server</a><br><br><br>"
    },
    {
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Productivity",
        "Tools"
      ],
      "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "duplicati/duplicati:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/duplicati-icon.png",
      "name": "duplicati",
      "platform": "linux",
      "ports": [
        "8200:8200/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Duplicati",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Duplicati",
          "container": "/config"
        },
        {
          "container": "/tmp"
        },
        {
          "container": "/backups"
        },
        {
          "container": "/source"
        }
      ],
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.duplicati.com/\" target=\"_blank\">https://www.duplicati.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-duplicati\" target=\"_blank\">https://docs.linuxserver.io/images/docker-duplicati</a><br><br><br>"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Eclipse Mosquitto is an open source message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
      "image": "eclipse-mosquitto:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/eclipse-mosquitto.png",
      "name": "eclipse-mosquitto",
      "platform": "linux",
      "ports": [
        "1883:1883/tcp",
        "9001:9001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Eclipse Mosquitto MQTT",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/config",
          "container": "/mosquitto/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/data",
          "container": "/mosquitto/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/log",
          "container": "/mosquitto/log"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_mosquitto.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_mosquitto.sh | bash</h3><br><br>"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "[arm] Web File Browser which can be used as a middleware or standalone app.",
      "image": "filebrowser/filebrowser:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
      "name": "filebrowser",
      "note": "The default user and password is admin/admin.",
      "platform": "linux",
      "ports": [
        "8082:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "FileBrowser",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/srv"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "A free, self-hostable rss aggregator…",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/freshrss:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/freshrss-icon.png",
      "name": "freshrss",
      "platform": "linux",
      "ports": [
        "8132:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "FreshRSS",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/freshrss",
          "container": "/config"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.freshrss.org/\" target=\"_blank\">https://www.freshrss.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/FreshRSS/FreshRSS/tree/edge/Docker\" target=\"_blank\">https://github.com/FreshRSS/FreshRSS/tree/edge/Docker</a><br><br><br>"
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "[arm] A clientless remote desktop gateway.",
      "image": "oznu/guacamole:armhf",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/guacamole.png",
      "name": "guacamole",
      "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Guacamole",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Guacamole",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lscr.io/linuxserver/heimdall:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/heimdall-icon.png",
      "name": "heimdall",
      "platform": "linux",
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Heimdall",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Heimdall",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version is not secured and should only be used if you want Docker integration and you don't worry about users on your network.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "ghcr.io/ajnart/homarr:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
      "name": "homarr",
      "platform": "linux",
      "ports": [
        "7575:7575/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Homarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homarr/configs",
          "container": "/app/data/configs"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homarr/icons",
          "container": "/app/public/icons"
        }
      ]
    },
    {
      "description": "Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.",
      "image": "homeassistant/home-assistant:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homeassistant.png",
      "name": "home assistant",
      "platform": "linux",
      "ports": [
        "8999:8123/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Home Assistant",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/HomeAssistant/assets",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
      "image": "b4bz/homer:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homer.png",
      "name": "homer",
      "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
      "platform": "linux",
      "ports": [
        "8902:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Homer",
      "type": 1,
      "env": [
        {
          "default": "1000",
          "label": "GID",
          "name": "GID"
        },
        {
          "default": "1000",
          "label": "UID",
          "name": "UID"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Homer/assets",
          "container": "/www/assets"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homer",
          "container": "/www/config.yml"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
      "env": [
        {
          "default": "invoice.my.domain",
          "label": "URL",
          "name": "URL"
        },
        {
          "label": "APP_KEY",
          "name": "APP_KEY"
        },
        {
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "label": "PORT",
          "name": "PORT"
        }
      ],
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/invoice_ninja.png",
      "name": "invoice_ninja",
      "note": "The database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation <a href='https://github.com/invoiceninja/dockerfiles'>here</a>. ",
      "platform": "linux",
      "repository": {
        "stackfile": "Template/Stack/invoice-ninja.yml",
        "url": "https://github.com/SelfhostedPro/selfhosted_templates"
      },
      "title": "Invoice Ninja",
      "type": 3
    },
    {
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "lscr.io/linuxserver/jellyfin:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jellyfin.png",
      "name": "jellyfin",
      "platform": "linux",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jellyfin",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jelllyfin",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/data/tvshows"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/data/movies"
        }
      ]
    },
    {
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "lscr.io/linuxserver/jellyfin:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jellyfin.png",
      "name": "jellyfin",
      "platform": "linux",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jellyfin",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jelllyfin",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/data/tvshows"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/data/movies"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A self-hosted recipe manager and meal planner",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/Stockholm",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "2",
          "label": "WEB_CONCURRENCY",
          "name": "WEB_CONCURRENCY"
        },
        {
          "default": "8",
          "label": "MAX_WORKERS",
          "name": "MAX_WORKERS"
        },
        {
          "default": "true",
          "label": "RECIPE_PUBLIC",
          "name": "RECIPE_PUBLIC"
        },
        {
          "default": "true",
          "label": "RECIPE_SHOW_NUTRITION",
          "name": "RECIPE_SHOW_NUTRITION"
        },
        {
          "default": "true",
          "label": "RECIPE_SHOW_ASSETS",
          "name": "RECIPE_SHOW_ASSETS"
        },
        {
          "default": "true",
          "label": "RECIPE_LANDSCAPE_VIEW",
          "name": "RECIPE_LANDSCAPE_VIEW"
        },
        {
          "default": "false",
          "label": "RECIPE_DISABLE_COMMENTS",
          "name": "RECIPE_DISABLE_COMMENTS"
        },
        {
          "default": "false",
          "label": "RECIPE_DISABLE_AMOUNT",
          "name": "RECIPE_DISABLE_AMOUNT"
        }
      ],
      "image": "hkotel/mealie:v0.4.3",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/mealie.png",
      "name": "mealie",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hay-kot.github.io/mealie/\" target=\"_blank\">https://hay-kot.github.io/mealie/</a><br><b>Official Docker Documentation: </b><a href=\"https://hay-kot.github.io/mealie/documentation/getting-started/install/\" target=\"_blank\">https://hay-kot.github.io/mealie/documentation/getting-started/install/</a><br><br><br>Default Credentials: Username: changeme@email.com Password: MyPassword. Documentation is Available <a href='https://hay-kot.github.io/mealie/documentation/getting-started/install/'>here</a>.",
      "platform": "linux",
      "ports": [
        "9925:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mealie",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/mealie",
          "container": "/app/data"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Monica is a great open source personal relationship management system.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/Stockholm",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "REPLACEMEWITHAWORDOF32CHARACTERS",
          "label": "APP_KEY",
          "name": "APP_KEY"
        },
        {
          "default": "development",
          "label": "APP_ENV",
          "name": "APP_ENV"
        },
        {
          "default": "panda",
          "label": "DATABASE_USER",
          "name": "DATABASE_USER"
        },
        {
          "default": "o8x&max8yt4h@v$q#orvx@72$",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        }
      ],
      "logo": "https://avatars0.githubusercontent.com/u/25832602",
      "name": "monica",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/monica.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "title": "Monica",
      "type": 3,
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.monicahq.com/\" target=\"_blank\">https://www.monicahq.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/monicahq/docker#use-monica-docker-image\" target=\"_blank\">https://github.com/monicahq/docker#use-monica-docker-image</a><br><br><br>"
    },
    {
      "categories": [
        "Web",
        "Proxy"
      ],
      "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/nginx:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/nginx-icon.png",
      "name": "nginx",
      "platform": "linux",
      "ports": [
        "8080:80/tcp",
        "8443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nginx",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nginx",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Proxy",
        "Tools"
      ],
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
      "name": "nginx-proxy-manager",
      "platform": "linux",
      "ports": [
        "80:8080/tcp",
        "81:8181/tcp",
        "443:4443/tcp"
      ],
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "password",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "password",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        }
      ],
      "restart_policy": "unless-stopped",
      "title": "Nginx Proxy Manager",
      "type": 3,
      "repository": {
        "stackfile": "stack/nginx-proxy-manager.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      }
    },
    {
      "categories": [
        "Proxy",
        "Tools"
      ],
      "description": "Nginx Proxy Manager v2 with sqlite and Goaccess Charts enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "false",
          "label": "SKIP_ARCHIVED_LOGS",
          "name": "SKIP_ARCHIVED_LOGS",
          "description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
        },
        {
          "default": "false",
          "label": "BASIC_AUTH",
          "name": "BASIC_AUTH",
          "description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
        },
        {
          "default": "user",
          "label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
          "name": "BASIC_AUTH_USERNAME",
          "description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
        },
        {
          "default": "Password",
          "label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
          "name": "BASIC_AUTH_PASSWORD",
          "description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
      "name": "nginx-proxy-manager-sqllite-goaccess",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "81:81/tcp",
        "443:443/tcp",
        "7880:7880/tcp"
      ],
      "repository": {
        "stackfile": "stack/nginx-proxy-manager-sqlite-goaccess.yml",
        "url": "https://github.com/pi-hosted/pi-hosted"
      },
      "restart_policy": "unless-stopped",
      "title": "Nginx Proxy Manager v2 with Sqlite and Goaccess Charts",
      "type": 3,
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#running-the-app\" target=\"_blank\">https://nginxproxymanager.com/setup/#running-the-app</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
    },
    {
      "categories": [
        "Other",
        "Web",
        "Tools"
      ],
      "description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
      "env": [
        {
          "default": "your_secret_goes_here",
          "label": "NODE_RED_CREDENTIAL_SECRET",
          "name": "NODE_RED_CREDENTIAL_SECRET"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/node-red.png",
      "name": "node-red",
      "platform": "linux",
      "ports": [
        "1880:1880/tcp"
      ],
      "repository": {
        "stackfile": "stack/node-red.yml",
        "url": "https://github.com/pi-hosted/pi-hosted/"
      },
      "restart_policy": "unless-stopped",
      "title": "Node Red",
      "type": 3,
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nodered.org/\" target=\"_blank\">https://nodered.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://nodered.org/docs/getting-started/docker\" target=\"_blank\">https://nodered.org/docs/getting-started/docker</a><br><br><br>"
    },
    {
      "categories": [
        "Other"
      ],
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "env": [
        {
          "default": "eth0",
          "label": "INTERFACE",
          "name": "INTERFACE"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/openvpn-as:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/openvpn-as-icon.png",
      "name": "openvpn-as",
      "platform": "linux",
      "ports": [
        "943:943/tcp",
        "9443:9443/tcp",
        "1194:1194/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "OpenVPN Access Server",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "PiAlert is monitoring your WIFI/LAN network and alerting of new (intruder or hacker) devices.",
      "image": "jokobsk/pi.alert:latest",
      "logo": "https://d36jcksde1wxzq.cloudfront.net/54e48877dab8df8f92cd.png",
      "name": "pialert",
      "note": "",
      "platform": "linux",
      "ports": [
        "20211:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pi-Alert",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Configs/pialert/config",
          "container": "/home/pi/pialert/config"
        },
        {
          "bind": "/portainer/Files/AppData/Configs/pialert/db",
          "container": "/home/pi/pialert/db"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "image": "pihole/pihole:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole.png",
      "name": "pihole",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
      "platform": "linux",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pi-Hole",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ]
    },
    {
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Web"
      ],
      "description": "PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data!\n  ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "privatebin/nginx-fpm-alpine:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/privatebin.png",
      "name": "privatebin",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "title": "PrivateBin",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/PrivateBin",
          "container": "/srv/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PrivateBin",
          "container": "/srv/cfg"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://privatebin.info/\" target=\"_blank\">https://privatebin.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\" target=\"_blank\">https://hub.docker.com/r/privatebin/nginx-fpm-alpine</a><br><br><br>"
    },
    {
      "categories": [
        "Email",
        "Productivity",
        "Tools",
        "Other"
      ],
      "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
      "image": "shenxn/protonmail-bridge:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/protonmail-bridge.png",
      "name": "protonmail-bridge",
      "note": "Please refer to the documentation <a href='https://hub.docker.com/r/shenxn/protonmail-bridge'/>here</a> to set this up.",
      "platform": "linux",
      "ports": [
        "143/tcp",
        "25/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "ProtonMail Bridge",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/ProtonMail-Bridge",
          "container": "/root"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
      "env": [
        {
          "default": "latest-arm",
          "label": "arch",
          "name": "arch"
        },
        {
          "default": "true",
          "label": "OOKLA_EULA_GDPR",
          "name": "OOKLA_EULA_GDPR"
        }
      ],
      "image": "henrywhitaker3/speedtest-tracker:dev-arm",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
      "name": "speedtest-tracker",
      "platform": "linux",
      "ports": [
        "8765:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Speedtest Tracker",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/speedtest-tracker",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Tools",
        "Web"
      ],
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it swag htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
      "env": [
        {
          "default": "abc@example.com",
          "label": "EMAIL",
          "name": "EMAIL"
        },
        {
          "default": "-Xms256m -Xmx512m",
          "label": "URL",
          "name": "URL"
        },
        {
          "default": "www,",
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS"
        },
        {
          "default": "false",
          "label": "ONLY_SUBDOMAINS",
          "name": "ONLY_SUBDOMAINS"
        },
        {
          "default": "2048",
          "label": "DHLEVEL",
          "name": "DHLEVEL"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "http",
          "label": "VALIDATION",
          "name": "VALIDATION"
        },
        {
          "default": "http",
          "label": "DNSPLUGIN",
          "name": "DNSPLUGIN"
        }
      ],
      "image": "linuxserver/swag:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/swag.png",
      "name": "swag",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SWAG - Secure Web Application Gateway",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/swag",
          "container": "/config"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/linuxserver/docker-swag\" target=\"_blank\">https://github.com/linuxserver/docker-swag</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/general/swag\" target=\"_blank\">https://docs.linuxserver.io/general/swag</a><br><br><br>"
    },
    {
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Tools"
      ],
      "description": null,
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/syncthing:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/syncthing-icon.png",
      "name": "syncthing",
      "platform": "linux",
      "ports": [
        "8384:8384/tcp",
        "21027:21027/udp",
        "22000:22000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "SyncThing",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Syncthing",
          "container": "/config"
        },
        {
          "container": "/sync"
        }
      ]
    },
    {
      "categories": [
        "Proxy",
        "Security",
        "Tools"
      ],
      "description": "Cloud-Native Networking Stack That Just Works.",
      "image": "traefik:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/traefik.png",
      "name": "traefik",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/</a><br><b>Official Docker Documentation: </b><a href=\"https://doc.traefik.io/traefik/getting-started/install-traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/getting-started/install-traefik/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/traefik.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/traefik.sh | bash</h3><br><br>A simple and lightweight reverse proxy",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp",
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Traefik",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
          "container": "/traefik.yml"
        },
        {
          "bind": "/portainer/Files/AppData/Config/traefik/config.yml",
          "container": "/config.yml"
        },
        {
          "bind": "/portainer/Files/AppData/Config/traefik/acme.json",
          "container": "/acme.json"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "lunik1/tt-rss:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tt-rss-icon.png",
      "name": "tt-rss",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tiny Tiny RSS",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/tt-rss",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "It is a self-hosted monitoring tool like 'Uptime Robot'.",
      "image": "louislam/uptime-kuma:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/uptime-kuma.png",
      "name": "uptime-kuma",
      "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/louislam/uptime-kuma\" target=\"_blank\">https://github.com/louislam/uptime-kuma</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install#-docker\" target=\"_blank\">https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install#-docker</a><br><br><br>A fancy self-hosted monitoring tool.",
      "platform": "linux",
      "ports": [
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Uptime Kuma",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/uptime-kuma",
          "container": "/app/data"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
      "image": "vaultwarden/server:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "name": "vaultwarden",
      "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
      "platform": "linux",
      "ports": [
        "80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Vaultwarden",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Vaultwarden",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools",
        "Maintenance"
      ],
      "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
      "image": "containrrr/watchtower:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/watchtower.png",
      "name": "watchtower",
      "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Watchtower",
      "type": 1,
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "categories": [
        "Other",
        "Tools"
      ],
      "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
      "image": "linuxserver/wikijs:latest",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wikijs.png",
      "name": "wikijs",
      "platform": "linux",
      "ports": [
        "3100:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Wikijs",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Wikijs",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Wikijs/data",
          "container": "/data"
        }
      ],
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://js.wiki/\" target=\"_blank\">https://js.wiki/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-wikijs\" target=\"_blank\">https://docs.linuxserver.io/images/docker-wikijs</a><br><br><br>"
    },
    {
      "categories": [
        "Other",
        "CMD",
        "Web",
        "Tools"
      ],
      "description": "YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "https://example.com",
          "label": "YOURLS_SITE",
          "name": "YOURLS_SITE"
        },
        {
          "default": "admin",
          "label": "YOURLS_USERNAME",
          "name": "YOURLS_USERNAME"
        },
        {
          "default": "",
          "label": "YOURLS_PASSWORD",
          "name": "YOURLS_PASSWORD"
        },
        {
          "default": "yourls",
          "label": "DATABASE_NAME",
          "name": "DATABASE_NAME"
        },
        {
          "default": "yourls",
          "label": "DATABASE_USER",
          "name": "DATABASE_USER"
        },
        {
          "default": "",
          "label": "DATABASE_PASSWORD",
          "name": "DATABASE_PASSWORD"
        },
        {
          "default": "",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        }
      ],
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/yourls-logo.png",
      "name": "yourls",
      "platform": "linux",
      "repository": {
        "stackfile": "stack/yourls.yml",
        "url": "https://github.com/pi-hosted/pi-hosted/"
      },
      "restart_policy": "unless-stopped",
      "title": "Yourls",
      "type": 3,
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://yourls.org/\" target=\"_blank\">https://yourls.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://yourls.org/#Install\" target=\"_blank\">https://yourls.org/#Install</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_yourls.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_yourls.sh | bash</h3><br><br>"
    },
    {
      "categories": [
        "Media"
      ],
      "description": "Self-hosted webapp written in Go which organizes and serves your porn.",
      "env": [
        {
          "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "STASH_CACHE": "/cache/",
          "STASH_CONFIG_FILE": "/root/.sstash/config.yml",
          "STASH_GENERATED": "/generated/",
          "STASH_METADATA": " /metadata/",
          "STASH_PORT": "9999",
          "STASH_STASH": "/data/"
        }
      ],
      "image": "stashapp/stash:latest",
      "logo": "https://avatars.githubusercontent.com/u/24867479?s=48&v=4",
      "name": "stashapp",
      "platform": "linux",
      "ports": [
        "9999:9999"
      ],
      "restart_policy": "unless-stopped",
      "title": "Stashapp",
      "type": 1,
      "volumes": [
        {
          "bind": "/stashapp/cache",
          "container": "/cache"
        },
        {
          "bind": "/media/usb/Porn",
          "container": "/data"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        },
        {
          "bind": "/stashapp/generated",
          "container": "/generated"
        },
        {
          "bind": "/stashapp/metadata",
          "container": "/metadata"
        },
        {
          "bind": "/stashapp/config",
          "container": "/root/.stash"
        }   
      ]
    },
    {
      "categories": [
        "Other",
        "Downloaders"
      ],
      "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
      "image": "tzahi12345/youtubedl-material:latest",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ytdlm.png",
      "name": "youtubedl-material",
      "platform": "linux",
      "ports": [
        "17442:17442/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "YouTubeDL-Material",
      "type": 1,
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/YTDLM",
          "container": "/app/appdata"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Video",
          "container": "/app/video"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
          "container": "/app/subscriptions"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Users",
          "container": "/app/users"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Audio",
          "container": "/app/audio"
        }
      ]
    }
  ]
}